#! /bin/sh
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

### BEGIN INIT INFO
# Provides: vyos
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Vyos agent service
# Description: Provides the vyos agent service
### END INIT INFO
set -e
PIDFILE=/var/run/vyos/vyos.pid
LOGFILE=/var/log/vyos/vyos.log
DAEMON=/usr/bin/vyos
DAEMON_ARGS="--log-file=$LOGFILE"
DAEMON_DIR=/var/run/vyos
ENABLED=true

if test -f /etc/default/vyos; then
    . /etc/default/vyos
fi

mkdir -p /var/run/vyos
mkdir -p /var/log/vyos
. /lib/lsb/init-functions
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
export TMPDIR=/var/lib/vyos/tmp

if [ ! -x ${DAEMON} ] ; then
    exit 0
fi

case "$1" in
start)
test "$ENABLED" = "true" || exit 0
start=1
## check if pidfile is there
if [ -f $PIDFILE ]; then
    pid=`cat $PIDFILE`
    ## check if pid is there
    if [ "1$pid" -ne "1" ]; then
        ## check if process with pid not running
        set +e
        kill -0 $pid > /dev/null 2>&1
        [ $? -eq 0 ] && start=0
        set -e
    fi
fi

if [ $start -eq 1 ]; then
    ## ensure stale processes killed
    set +e
    running_processes=`ps aux | grep "python /usr/bin/vyos" | grep -v grep | awk '{print $2}' | wc -l`
    [ $running_processes -gt 0 ] && ps aux | grep "python /usr/bin/vyos" | grep -v grep | awk '{print $2}' | xargs kill -9
    set -e
    log_daemon_msg "Starting Vyos Agent"
    # We have completely messed up the rc level scripts
    sudo chown vyos:users -R /var/run/vyos
    sudo -u vyos start-stop-daemon -Sbmv --pidfile $PIDFILE --chdir $DAEMON_DIR --exec $DAEMON -- $DAEMON_ARGS
    log_end_msg $?
else
    echo "vyos[$pid] is already running"
fi

;;
stop)
test "$ENABLED" = "true" || exit 0

if [ -f $PIDFILE ]; then
    set +e
    kill -0 `cat $PIDFILE` > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        set -e
        log_daemon_msg "Stopping Vyos Agent"
        start-stop-daemon --stop --oknodo --pidfile ${PIDFILE}
        log_end_msg $?
    else
        echo "No process with PID `cat $PIDFILE` found running, removing the PID file"
    fi
    rm $PIDFILE
else
    echo "PID file not existing"
fi

## ensure stale processes killed
set +e
running_processes=`ps aux | grep "python /usr/bin/vyos" | grep -v grep | awk '{print $2}' | wc -l`
[ $running_processes -gt 0 ] && ps aux | grep "python /usr/bin/vyos" | grep -v grep | awk '{print $2}' | xargs kill -9
set -e
;;
restart|force-reload)
test "$ENABLED" = "true" || exit 1
$0 stop
sleep 2
$0 start
;;
reload)
test "$ENABLED" = "true" || exit 0

## check if pidfile is there
if [ -f $PIDFILE ]; then
    set +e
    kill -0 `cat $PIDFILE` > /dev/null 2>&1
    if [ $? -eq 0 ]; then
        set -e
        log_daemon_msg "Reloading vyos agent"
        start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile $PIDFILE
        log_end_msg $?
    else
        echo "No process with PID `cat $PIDFILE` found running, removing the PID file"
    fi
else
    echo "Vyos agent is not running or PID file not existing"
fi

;;
status)
test "$ENABLED" = "true" || exit 0
status_of_proc -p $PIDFILE $DAEMON vyos && exit 0 || exit $?
;;
*)
log_action_msg "Usage: /etc/init.d/vyos {start|stop|restart|force-reload|reload|status}"
exit 1
;;
esac
exit 0
