#! /bin/sh
#
# One Convergence, Inc. CONFIDENTIAL
# Copyright (c) 2012-2014, One Convergence, Inc., USA
# All Rights Reserved.
#
# All information contained herein is, and remains the property of
# One Convergence, Inc. and its suppliers, if any. The intellectual and
# technical concepts contained herein are proprietary to One Convergence,
# Inc. and its suppliers.
#
# Dissemination of this information or reproduction of this material is
# strictly forbidden unless prior written permission is obtained from
# One Convergence, Inc., USA
#
### BEGIN INIT INFO
# Provides: oc-vyos
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: OC vyos service
# Description: Provides the oc-vyos service
### END INIT INFO
set -e
PIDFILE=/var/run/elastic_services/oc-vyos.pid
LOGFILE=/var/log/elastic_services/oc-vyos.log
DAEMON=/usr/bin/oc-vyos
DAEMON_ARGS="--log-file=$LOGFILE"
DAEMON_DIR=/var/run/elastic_services
ENABLED=true
if test -f /etc/default/oc-vyos; then
. /etc/default/oc-vyos
fi
mkdir -p /var/run/elastic_services
mkdir -p /var/log/elastic_services
. /lib/lsb/init-functions
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"
export TMPDIR=/var/lib/elastic_services/tmp
if [ ! -x ${DAEMON} ] ; then
exit 0
fi
case "$1" in
start)
test "$ENABLED" = "true" || exit 0
start=1
## check if pidfile is there
if [ -f $PIDFILE ]; then
pid=`cat $PIDFILE`
## check if pid is there
if [ "1$pid" -ne "1" ]; then
## check if process with pid not running
set +e
kill -0 $pid > /dev/null 2>&1
[ $? -eq 0 ] && start=0
set -e
fi
fi
if [ $start -eq 1 ]; then
## ensure stale processes killed
set +e
running_processes=`ps aux | grep "python /usr/bin/oc-vyos" | grep -v grep | awk '{print $2}' | wc -l`
[ $running_processes -gt 0 ] && ps aux | grep "python /usr/bin/oc-vyos" | grep -v grep | awk '{print $2}' | xargs kill -9
set -e
log_daemon_msg "Starting oc vyos"
# We have completely messed up the rc level scripts
sudo chown vyos:users -R /var/run/elastic_services
sudo -u vyos start-stop-daemon -Sbmv --pidfile $PIDFILE --chdir $DAEMON_DIR --exec $DAEMON -- $DAEMON_ARGS
log_end_msg $?
else
echo "oc-vyos[$pid] is already running"
fi
;;
stop)
test "$ENABLED" = "true" || exit 0
if [ -f $PIDFILE ]; then
set +e
kill -0 `cat $PIDFILE` > /dev/null 2>&1
if [ $? -eq 0 ]; then
set -e
log_daemon_msg "Stopping oc vyos"
start-stop-daemon --stop --oknodo --pidfile ${PIDFILE}
log_end_msg $?
else
echo "No process with PID `cat $PIDFILE` found running, removing the PID file"
fi
rm $PIDFILE
else
echo "PID file not existing"
fi
## ensure stale processes killed
set +e
running_processes=`ps aux | grep "python /usr/bin/oc-vyos" | grep -v grep | awk '{print $2}' | wc -l`
[ $running_processes -gt 0 ] && ps aux | grep "python /usr/bin/oc-vyos" | grep -v grep | awk '{print $2}' | xargs kill -9
set -e
;;
restart|force-reload)
test "$ENABLED" = "true" || exit 1
$0 stop
sleep 2
$0 start
;;
reload)
test "$ENABLED" = "true" || exit 0
## check if pidfile is there
if [ -f $PIDFILE ]; then
set +e
kill -0 `cat $PIDFILE` > /dev/null 2>&1
if [ $? -eq 0 ]; then
set -e
log_daemon_msg "Reloading oc vyos"
start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile $PIDFILE
log_end_msg $?
else
echo "No process with PID `cat $PIDFILE` found running, removing the PID file"
fi
else
echo "oc vyos is not running or PID file not existing"
fi
;;
status)
test "$ENABLED" = "true" || exit 0
status_of_proc -p $PIDFILE $DAEMON oc-vyos && exit 0 || exit $?
;;
*)
log_action_msg "Usage: /etc/init.d/oc-vyos {start|stop|restart|force-reload|reload|status}"
exit 1
;;
esac
exit 0
